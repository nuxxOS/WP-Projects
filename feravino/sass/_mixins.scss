///////////////
// FONT SIZE 
///////////////
@mixin font-size($sizeValue: 1.6) {
  font-size: ($sizeValue * 10) + px;
  font-size: $sizeValue + rem;
}
/* Usage: @include font-size(1.3); */

///////////////
// BUTTON
///////////////
@mixin button($width: 120px, $height: 60px, $line-height: $height) {
    display: inline-block;
    width: $width;
    height: $height;
    line-height: $line-height;
    text-transform: uppercase;
    font-weight: bold;
    color: $main-color;
    &:hover {
      background: $main-color;
      color: white;
    }
}
/* Usage: @include button(); */


///////////////
// OPACITY IN ALL BROWSERS
///////////////
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}
/* Usage: @include opacity(0.8); */


///////////////
// CLEARFIX
///////////////
@mixin clearfix() {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}
/* Usage: @include clearfix(); */


///////////////
// BORDER RADIUS
///////////////
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box;  
}
/* Usage: @include border-radius(15px); */


///////////////
// VERTICAL ALIGN
///////////////
@mixin vertical-align {
    position: relative;
    top: 50%;
    -webkit-transform: translateY(-50%) !important;
    -ms-transform: translateY(-50%) !important;
    transform: translateY(-50%) !important;
}
/* Usage: @include vertical-align(); */

///////////////
// TRANSFORM
///////////////
@mixin transform($transforms) {
	   -moz-transform: $transforms;
	     -o-transform: $transforms;
	    -ms-transform: $transforms;
	-webkit-transform: $transforms;
          transform: $transforms;
}

///////////////
// POSITION ABSOLUTE
///////////////
@mixin abs-pos ($top: auto, $right: auto, $bottom: auto, $left: auto) {
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  position: absolute;
}
/* Usage: @include abs-pos(10px, 10px, 5px, 15px); */


///////////////
// RESPONSIVE
///////////////
@mixin breakpoint($point) {
  @if $point == large {
    @media (max-width: 64.375em) { @content; }
  }
  @else if $point == medium {
    @media (max-width: 50em) { @content; }
  }
  @else if $point == ipadPortrait {
    @media screen and (min-width: 48.000em) and (max-width: 64.000em) and (orientation: portrait) { @content; }
  }
  @else if $point == ipadLandscape {
    @media screen and (min-width: 48.000em) and (max-width: 64.000em) and (orientation: landscape) { @content; }
  }
  @else if $point == iphone6landscape {
    @media screen and (max-device-width: 960px), 
    screen and (max-device-width: 960px), 
    screen and (max-width: 480px) { 
      @content; 
    }
  }
  @else if $point == small {
    @media (max-width: 37.5em)  { @content; }
  }
}
/*  Usage: 
    @include breakpoint(large) { width: 60%; }
    @include breakpoint(medium) { width: 80%; }
    @include breakpoint(small) { width: 95%; }
*/

///////////////
// TRANSITION
///////////////
@mixin transition($transition...) {
    -moz-transition:    $transition;
    -o-transition:      $transition;
    -webkit-transition: $transition;
    transition:         $transition;
}
/* Usage: @include transition(all .3s ease-in-out); */

///////////////
// BOX SHADOW
///////////////
@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $color;
    -moz-box-shadow:inset $top $left $blur $color;
    box-shadow:inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}
/* Usage: @include box-shadow(10px, 10px, 5px, 15px, true); */